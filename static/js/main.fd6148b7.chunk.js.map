{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","toDo","setToDo","_useState3","_useState4","toDos","setToDos","react_default","a","createElement","className","length","onSubmit","event","preventDefault","currentArray","concat","toConsumableArray","onChange","target","value","type","placeholder","map","item","index","key","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"kJAqDeA,MAlDf,WACE,IAAAC,EACwBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GACpBK,EAC0BN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAgBtB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,4BAAoBJ,EAAMM,OAAM,KAChCJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBAAe,4CAEfF,EAAAC,EAAAC,cAAA,WAAM,sDAGRF,EAAAC,EAAAC,cAAA,QAAMG,SAtBO,SAACC,GAChBA,EAAMC,iBAEO,KAATb,IAMJK,EAAS,SAACS,GAAY,OAAMd,GAAIe,OAAAjB,OAAAkB,EAAA,EAAAlB,CAAKgB,MAErCb,EAAQ,OAYJK,EAAAC,EAAAC,cAAA,SACES,SAzBS,SAACL,GAAK,OAAKX,EAAQW,EAAMM,OAAOC,QA0BzCA,MAAOnB,EACPoB,KAAK,OACLC,YAAY,wBAEdf,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,WACCJ,EAAMkB,IAAI,SAACC,EAAMC,GAAK,OACrBlB,EAAAC,EAAAC,cAAA,MACEiB,IAAOD,GAEND,OC1CEG,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,WAAU,KACfzB,EAAAC,EAAAC,cAACwB,EAAG","file":"static/js/main.fd6148b7.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction App() {\n  //input's default value is empty\n  const [toDo, setToDo] = useState(\"\");\n  //if user send content, we save in this state\n  const [toDos, setToDos] = useState([]);\n  //updating input UI\n  const onChange = (event) => setToDo(event.target.value);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    // if user send empty, we dont' update to-do-list. return nothing\n    if (toDo === \"\"){\n      return;\n    }\n    /* we don't modity State DIRECTLY\n    instead, use Modifier function */\n    // accumulate entered to-dos to array\n    setToDos((currentArray) => [toDo, ...currentArray]);\n    // the function which modify input to empty\n    setToDo(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>My To-Do-List ({toDos.length})</h1>\n      <span>\n        <b>Warning!</b>\n        &nbsp;This Lists are not going to be saved.\n        <br />\n        if you refresh the page, all lists will be vanish.\n      </span>\n      <form onSubmit={onSubmit}>\n        <input \n          onChange={onChange}\n          value={toDo} \n          type=\"text\" \n          placeholder=\"Write your to do...\" \n        />\n        <button>Add To Do</button>\n      </form>\n      <hr />\n      {toDos.map((item, index) => \n        <ul \n          key = {index}\n          >\n          {item}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}